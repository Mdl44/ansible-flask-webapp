---
- name: SLURM Controller Setup
  hosts: slurm_controller
  become: yes
  gather_facts: yes
  
  vars:
    slurm_version: "23.11.10"
    slurm_user: "slurm"
    munge_user: "munge"
    cluster_name: "flex-cluster"
    controller_node: "{{ inventory_hostname }}"
    
  tasks:
    # Execute common tasks
    - include_tasks: common_tasks.yml
    
    # Controller-specific configuration
    - name: Create SLURM configuration file
      copy:
        content: |
          # SLURM Configuration File - {{ cluster_name }}
          # Generated by Ansible on {{ ansible_date_time.iso8601 }}
          
          ClusterName={{ cluster_name }}
          ControlMachine={{ ansible_hostname }}
          ControlAddr={{ ansible_default_ipv4.address }}
          
          # Authentication & Security
          AuthType=auth/munge
          CryptoType=crypto/munge
          
          # User Configuration
          SlurmUser={{ slurm_user }}
          SlurmdUser=root
          
          # Port Configuration
          SlurmctldPort=6817
          SlurmdPort=6818
          
          # State and Spool Directories
          StateSaveLocation=/var/spool/slurm/ctld
          SlurmdSpoolDir=/var/spool/slurm/d
          
          # Process Tracking
          ProctrackType=proctrack/pgid
          TaskPlugin=task/none
          
          # Networking
          SwitchType=switch/none
          MpiDefault=none
          
          # Process IDs
          SlurmctldPidFile=/var/run/slurm/slurmctld.pid
          SlurmdPidFile=/var/run/slurm/slurmd.pid
          
          # Logging
          SlurmctldLogFile=/var/log/slurm/slurmctld.log
          SlurmdLogFile=/var/log/slurm/slurmd.log
          SlurmSchedLogFile=/var/log/slurm/sched.log
          SlurmSchedLogLevel=1
          
          # Scheduling
          SchedulerType=sched/backfill
          SelectType=select/cons_tres
          SelectTypeParameters=CR_Core
          
          # Node Configuration - Compute nodes
          {% for host in groups['slurm_compute'] %}
          NodeName={{ hostvars[host]['ansible_hostname'] | default(host) }} CPUs={{ hostvars[host]['ansible_processor_vcpus'] | default(2) }} RealMemory={{ ((hostvars[host]['ansible_memtotal_mb'] | default(1024)) * 0.95) | int }} State=UNKNOWN
          {% endfor %}
          
          # Partition Configuration  
          PartitionName=debug Nodes={% for host in groups['slurm_compute'] %}{{ hostvars[host]['ansible_hostname'] | default(host) }}{% if not loop.last %},{% endif %}{% endfor %} Default=YES MaxTime=INFINITE State=UP
          PartitionName=compute Nodes={% for host in groups['slurm_compute'] %}{{ hostvars[host]['ansible_hostname'] | default(host) }}{% if not loop.last %},{% endif %}{% endfor %} MaxTime=24:00:00 State=UP
        dest: /etc/slurm/slurm.conf
        owner: slurm
        group: slurm
        mode: '0644'

    - name: Start and enable SLURM controller
      systemd:
        name: slurmctld
        state: started
        enabled: yes

    - name: Wait for SLURM services to start
      wait_for:
        port: 6817
        host: "{{ ansible_default_ipv4.address }}"
        timeout: 60

    - name: Test SLURM installation from controller
      command: /usr/local/bin/sinfo
      retries: 5
      delay: 10
      register: slurm_test
      failed_when: false

    - name: Display SLURM test result
      debug:
        msg: |
          SLURM sinfo output: {{ slurm_test.stdout | default('No output') }}
          SLURM sinfo error: {{ slurm_test.stderr | default('No error') }}
          Return code: {{ slurm_test.rc | default('N/A') }}