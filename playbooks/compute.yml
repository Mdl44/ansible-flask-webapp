---
- name: SLURM Compute Node Setup (cgroup v2, robust)
  hosts: slurm_compute
  become: yes
  gather_facts: yes

  vars:
    slurm_version: "23.11.10"
    slurm_user: "slurm"
    munge_user: "munge"

  tasks:

    - name: Check if SLURM is already compiled with cgroup v2
      shell: |
        if [ -f "/usr/local/lib/slurm/cgroup_v2.so" ]; then
          echo "SKIP_COMPILATION=true"
        else
          echo "SKIP_COMPILATION=false"
        fi
      register: slurm_check
      
    # 1. Common dependencies, users, directories, MUNGE install
    - include_tasks: common_tasks.yml

    # 2. Copy MUNGE key from controller
    - name: Fetch MUNGE key from controller
      fetch:
        src: /etc/munge/munge.key
        dest: /tmp/munge.key
        flat: yes
      delegate_to: "{{ groups['slurm_controller'][0] }}"

    - name: Deploy MUNGE key to compute node
      copy:
        src: /tmp/munge.key
        dest: /etc/munge/munge.key
        owner: munge
        group: munge
        mode: '0400'

    - name: Start and enable MUNGE
      systemd:
        name: munge
        state: started
        enabled: yes

    # 3. Copy slurm.conf from controller
    - name: Fetch slurm.conf from controller
      fetch:
        src: /etc/slurm/slurm.conf
        dest: /tmp/slurm.conf
        flat: yes
      delegate_to: "{{ groups['slurm_controller'][0] }}"

    - name: Deploy slurm.conf to compute node
      copy:
        src: /tmp/slurm.conf
        dest: /etc/slurm/slurm.conf
        owner: slurm
        group: slurm
        mode: '0644'

    # 5. Download and compile SLURM with cgroup v2
    - name: Download SLURM source
      get_url:
        url: "https://download.schedmd.com/slurm/slurm-{{ slurm_version }}.tar.bz2"
        dest: "/tmp/slurm-{{ slurm_version }}.tar.bz2"
        mode: '0644'

    - name: Extract SLURM source
      unarchive:
        src: "/tmp/slurm-{{ slurm_version }}.tar.bz2"
        dest: /tmp
        remote_src: yes
        creates: "/tmp/slurm-{{ slurm_version }}"

    - name: Configure SLURM with cgroup v2 support
      shell: |
        cd /tmp/slurm-{{ slurm_version }}
        ./configure \
          --prefix=/usr/local \
          --sysconfdir=/etc/slurm \
          --with-systemdsystemunitdir=/usr/lib/systemd/system \
          --enable-cgroup2 \
          CPPFLAGS="$SYSTEMD_CFLAGS" \
          LDFLAGS="$SYSTEMD_LIBS"
      register: configure_result
      when: "'SKIP_COMPILATION=false' in slurm_check.stdout"

    - name: Compile SLURM
      shell: |
        cd /tmp/slurm-{{ slurm_version }}
        make -j$(nproc)
      args:
        creates: "/tmp/slurm-{{ slurm_version }}/src/slurmd/slurmd"

    - name: Install SLURM
      shell: |
        cd /tmp/slurm-{{ slurm_version }}
        make install

    - name: Reload systemd
      systemd:
        daemon_reload: yes

    # 6. cgroup.conf for v2
    - name: Create cgroup.conf with v2 support
      copy:
        content: |
          CgroupMountpoint=/sys/fs/cgroup
          CgroupPlugin=cgroup/v2
          ConstrainCores=yes
          ConstrainRAMSpace=yes
          ConstrainSwapSpace=no
          ConstrainDevices=yes
          AllowedRAMSpace=100
          AllowedSwapSpace=0
        dest: /etc/slurm/cgroup.conf
        owner: slurm
        group: slurm
        mode: '0644'

    # 7. Start slurmd
    - name: Start and enable slurmd
      systemd:
        name: slurmd
        state: started
        enabled: yes

    # 8. Final check
    - name: Check slurmd status
      command: systemctl status slurmd
      register: slurmd_status
      failed_when: false

    - name: Show slurmd status
      debug:
        msg: "{{ slurmd_status.stdout }}"

    - name: Test SLURM from controller perspective
      command: /usr/local/bin/sinfo -N
      delegate_to: "{{ groups['slurm_controller'][0] }}"
      register: final_test
      failed_when: false

    - name: Display final cluster status
      debug:
        msg: |
          ðŸŽ‰ SLURM COMPUTE NODE SETUP COMPLETE! ðŸŽ‰
          Cluster View:
          {{ final_test.stdout | default('Unable to get cluster status') }}